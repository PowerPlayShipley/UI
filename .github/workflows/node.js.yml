# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Testing

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
      - 'releases/**'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: '16'
          registry-url: https://registry.npmjs.org
      - name: Install dependencies
        run: npm ci
      - name: Run Jest
        run: npm run test:ci
  cypress:
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"

    strategy:
      matrix:
        browser: [edge, chrome]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: '16'
          registry-url: https://registry.npmjs.org
      - name: Start API's
        run: |
          docker network create traefik-public
          docker-compose -f ./deploy/docker/docker-compose.yml up -d
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          command: npm run test:e2e:headless
      - name: Post Start API's
        run: docker-compose -f ./deploy/docker/docker-compose.yml down
        continue-on-error: true

  deploy-images:
    needs: [test, cypress]
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha
            latest
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: github.event_name != 'pull_request'
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            DOCKER_TAG=${{ steps.meta.outputs.tags }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_BRANCH=${{ github.ref }}
            CI=github
